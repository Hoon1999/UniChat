## 워크플로우 이름 작성
name: deploy-to-ec2

## on 은 어떤 이벤트가 발생했을 때 워크플로우를 수행할지 결정한다.
# main 브런치에 push 하면 실행
on:
  push:
    branches:
      - main

## 환경변수 설정
# 환경변수 모르면 그냥 변수라고 생각하자..
# key : value 구조이다.
env: 
  # AWS S3 버킷을 생성하고 해당 버킷이름을 변수에 저장한다.
  S3_BUCKET_NAME: unichat-deploy-bucket
  # 애플리케이션 이름과 배포그룹 이름을 변수에 저장한다.
  CODE_DEPLOY_APPLICATION_NAME: Unichat-CodeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: Unichat-Deploy-Group

## 실행 할 job 목록
jobs:
  # 딱히 생각나는 job 이름이 없다...
  deployment-job:
    
    # ubuntu 최신 버전에서 실행
    runs-on: ubuntu-latest
    
    # 이 Job 에서 수행할 동작들 작성
    steps:
      ## 체크아웃이 뭔지 모르면 깃허브 repository 에서 코드를 내려받는 것...이라고만 알아두자.
      # 각각의 step 에도 이름을 지정할 수 있다. 생략해도 무방함.
      - name: Checkout
        uses: actions/checkout@v3
        
      ## Java 를 set up 한다. 프로젝트의 java 버전이랑 맞춰준다.
      - name: Set up Java 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      ## gradlew 에 권한부여.
      # gradlew 는 gradle 을 빌드하는 tool 이라고 한다.
      # 권한부여를 안해주면 빌드하다가 오류가 날 수도 있다고 한다.
      # shell 에서 수행하는건 run 으로 하는것 같다..
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
        shell: bash

      ## Gradle 빌드 (test 코드 제외)
      # 테스트 코드가 제대로 안만들어져있다.
      # 테스트 코드에서 오류나면 안되니까 제외시켰다.
      - name: build with gradle
        run: ./gradlew build -x test
        shell: bash
        
      ## 프로젝트를 zip 으로 압축
      # GITHUB_SHA 는 Github actions 에서 자동으로 제공되는 환경변수 중 하나이다.
      # SHA는 설명 안해도 알것이고.. 몰라도 상관없다. SHA 값은 현재 commit 의 SHA 해시 값이다.
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip
        shell: bash

      ## AWS 자격 증명
      # Github action secret 에서 값을 가져온다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # IAM User 엑세스 키
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # IAM User 시크릿 엑세스 키

      ## 압축한 zip 파일 S3 로 업로드
      # aws s3 cp 는 약간 scp 명령어랑 비슷한 역할을 하는 듯?? 근데 이제 aws s3 에 맞게 커스텀이 된 명령어 같다..
      # --region 은 S3 가 위치한 지역을 명시한다. ap-northeast-2 는 서울을 의미한다.
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      ## S3 에 있는 zip 파일을 EC2 로 배포
      # aws deploy create-deployment 는 awscli 명령어다. deployment를 생성하는 명령어인듯
      # deployment config name 옵션 : 여러 EC2 인스턴스에 한번에 배포할지 순차적으로 배포할지 작성한다. 나는 인스턴스가 하나이므로 뭘 적든 의미가 없다.
      # file exists behavior 옵션 : 배포할 파일의 이름이 중복될 경우 오류가 발생한다. 이 때 덮어씌워서 오류없이 지나갈 것인지 정할 수 있다. 
      # 나는 파일명이 SHA(해시함수) 이므로 매번 달라서 필요 없는 옵션이기는 하다.
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --file-exists-behavior OVERWRITE \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }}, bundleType=zip, key=$GITHUB_SHA.zip \
          --region ap-northeast-2
